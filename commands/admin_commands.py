"""
Admin-only slash commands
"""
import discord
from discord import app_commands
from discord.ext import commands
from database.party_operations import party_ops
from utils.helpers import format_admin_stats_embed, calculate_party_stats
from config.settings import ERROR_COLOR

class AdminCommands(commands.Cog):
    """Administrative commands for party management"""
    
    def __init__(self, bot):
        self.bot = bot
    
    @app_commands.command(name="admin-clear-parties", description="🔨 Admin: Delete all parties in this server")
    async def admin_clear_parties(self, interaction: discord.Interaction):
        """Delete all parties in the server (Admin only)"""
        try:
            # Check if user has administrator permissions
            if not interaction.user.guild_permissions.administrator:
                await interaction.response.send_message("❌ **Admin Only** - You need Administrator permissions to use this command.", ephemeral=True)
                return
            
            # Delete all parties for this guild
            party_count = party_ops.delete_guild_parties(interaction.guild.id)
            
            if party_count == 0:
                await interaction.response.send_message("📭 No parties to delete in this server.", ephemeral=True)
                return
            
            embed = discord.Embed(
                title="🔨 Admin Action Complete",
                description=f"Successfully deleted **{party_count}** parties and all their members.",
                color=ERROR_COLOR
            )
            embed.set_footer(text=f"Action performed by {interaction.user.display_name}")
            
            await interaction.response.send_message(embed=embed)
            print(f"🔨 Admin {interaction.user.display_name} deleted {party_count} parties in {interaction.guild.name}")
            
        except Exception as e:
            print(f"❌ Error in admin_clear_parties: {e}")
            await interaction.response.send_message("❌ Failed to clear parties!", ephemeral=True)
    
    @app_commands.command(name="admin-party-stats", description="📊 Admin: View detailed party statistics")
    async def admin_party_stats(self, interaction: discord.Interaction):
        """View detailed party statistics (Admin only)"""
        try:
            # Check if user has administrator permissions
            if not interaction.user.guild_permissions.administrator:
                await interaction.response.send_message("❌ **Admin Only** - You need Administrator permissions to use this command.", ephemeral=True)
                return
            
            # Get all parties for this guild
            party_list = party_ops.get_guild_parties(interaction.guild.id)
            
            # Calculate statistics
            stats = calculate_party_stats(party_list)
            
            # Create embed
            embed = format_admin_stats_embed(stats, interaction.guild.name)
            embed.set_footer(text=f"Generated by {interaction.user.display_name}")
            
            await interaction.response.send_message(embed=embed)
            
        except Exception as e:
            print(f"❌ Error in admin_party_stats: {e}")
            await interaction.response.send_message("❌ Failed to get statistics!", ephemeral=True)
    
    @app_commands.command(name="admin-delete-party", description="🗑️ Admin: Force delete any party by ID")
    @app_commands.describe(party_id="Party ID to delete (first 8 chars shown in /parties)")
    async def admin_delete_party(self, interaction: discord.Interaction, party_id: str):
        """Force delete a party by ID (Admin only)"""
        try:
            # Check if user has administrator permissions
            if not interaction.user.guild_permissions.administrator:
                await interaction.response.send_message("❌ **Admin Only** - You need Administrator permissions to use this command.", ephemeral=True)
                return
            
            # Find party by partial ID
            party_data = party_ops.find_party_by_partial_id(interaction.guild.id, party_id)
            
            if not party_data:
                await interaction.response.send_message(f"❌ Party with ID starting with **{party_id}** not found in this server.", ephemeral=True)
                return
            
            party_name = party_data.get('party_name', 'Unknown')
            creator_id = party_data.get('created_by')
            full_party_id = party_data['id']
            
            # Delete party
            success = party_ops.delete_party(full_party_id)
            
            if success:
                embed = discord.Embed(
                    title="🗑️ Admin Party Deletion",
                    description=f"Successfully deleted party **{party_name}** (ID: {full_party_id[:8]}...)",
                    color=ERROR_COLOR
                )
                embed.add_field(name="Original Creator", value=f"<@{creator_id}>", inline=True)
                embed.set_footer(text=f"Deleted by Admin {interaction.user.display_name}")
                
                await interaction.response.send_message(embed=embed)
                print(f"🗑️ Admin {interaction.user.display_name} deleted party {full_party_id} ({party_name})")
            else:
                await interaction.response.send_message("❌ Failed to delete party!", ephemeral=True)
            
        except Exception as e:
            print(f"❌ Error in admin_delete_party: {e}")
            await interaction.response.send_message("❌ Failed to delete party!", ephemeral=True)

async def setup(bot):
    """Setup function for the cog"""
    await bot.add_cog(AdminCommands(bot))